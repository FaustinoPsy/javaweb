/*
 * Copyright (c) 2015. Simas Abramovas
 *
 * This file is part of VideoClipper.
 *
 * VideoClipper is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * VideoClipper is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with VideoClipper. If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'com.android.application'

android {
	compileSdkVersion 22
	buildToolsVersion "22.0.1"
	defaultConfig {
		applicationId 'com.simas.vc'
		minSdkVersion 11
		targetSdkVersion 22
		versionCode 1
		versionName "1.0"
	}

	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}

	// Disable implicit Android.mk creation for all app variants
	applicationVariants.all { variant ->
		variant.getVariantData().ndkCompileTask.enabled = false
	}

	/* Custom tasks that compile libraries with ndk-build using the customized makefile */

	// Debug tasks
/*	//noinspection GroovyAssignabilityCheck
	task ndkBuildDebug(type: Exec) {
		// Fetch NDK directory from local.properties
		Properties properties = new Properties()
		properties.load(project.rootProject.file('local.properties').newDataInputStream())
		def ndkDir = properties.getProperty('ndk.dir')

		println("DEBUG")

		commandLine "$ndkDir/ndk-build",
				"NDK_DEBUG=0",
				"-B", // Force a rebuild
				'NDK_PROJECT_PATH=build/intermediates/ndk',
				'NDK_LIBS_OUT=src/main/jniLibs',
				'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
				'NDK_APPLICATION_MK=src/main/jni/Application.mk'
	}
	tasks.whenTaskAdded { task ->
		if (task.name == 'compileDebugJava') {
			task.dependsOn ndkBuildDebug
		}
	}*/

	// Release tasks
/*	//noinspection GroovyAssignabilityCheck
	task ndkBuildRelease(type: Exec) {
		// Fetch NDK directory from local.properties
		Properties properties = new Properties()
		properties.load(project.rootProject.file('local.properties').newDataInputStream())
		def ndkDir = properties.getProperty('ndk.dir')

		println("RELEASE")

		commandLine "$ndkDir/ndk-build",
				"NDK_DEBUG=1",
				'NDK_PROJECT_PATH=build/intermediates/ndk',
				'NDK_LIBS_OUT=src/main/jniLibs',
				'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
				'NDK_APPLICATION_MK=src/main/jni/Application.mk'
	}

	tasks.whenTaskAdded { task ->
		if (task.name == 'compileReleaseJava') {
			task.dependsOn ndkBuildRelease
		}
	}
*/
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:22.2.0'
	compile 'com.android.support:support-v4:22.2.0'
	compile project(':VersatileViewPager:versatileviewpager')
}
